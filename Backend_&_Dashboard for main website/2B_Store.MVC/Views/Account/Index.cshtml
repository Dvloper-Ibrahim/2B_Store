@model IEnumerable<_2B_Store.DTO.GetAllUsersDTO>

@{
    ViewData["Title"] = "Index";
}

@section PageTitle {
    <title>2B - Users</title>
}

<div class="container-fluid">
</div>

<div class="container-fluid" style="overflow-x: auto;">
    <table class="table table-bordered table-hover align-middle">
        <thead class="table-dark">
            <tr>
                <th class="align-middle">
                    @Html.DisplayNameFor(model => model.UserName)
                </th>
                <th class="align-middle">
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th class="align-middle">
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th class="align-middle">
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th class="align-middle">
                    @Html.DisplayNameFor(model => model.PhoneNumber)
                </th>

                <th class="align-middle">
                    @Html.DisplayNameFor(model => model.SignUpForNewsletter)
                </th>
                <th class="align-middle">Actions</th>

                @*<th></th>*@
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                    </td>
@*                    <td>
                        @Html.DisplayFor(modelItem => item.Password)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ConfirmPassword)
                    </td>*@
                    <td>
                        @*@Html.DisplayFor(modelItem => item.SignUpForNewsletter)*@
                        @(item.SignUpForNewsletter ? "Signed" : "Not Signed")
                    </td>
                    <td>
                        @*<a asp-action="edit" asp-route-id="@item.Id" class="mt-1 btn btn-success">Edit</a>*@
                        <a asp-action="Profile" asp-route-id="@item.Id" class="mt-1 btn btn-primary">Details</a>
                        <form asp-action="Delete" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@item.Id" />
                            <button class="btn btn-danger mt-1" onclick="return confirm('Are you sure you want to delete this user?')">Delete</button>
                        </form>
                        @*<a asp-action="delete" asp-route-id="" class="mt-1 btn btn-danger">Delete</a>*@
@*                        @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })*@
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        let sideLinks = document.querySelectorAll(".side-nav");
        sideLinks.forEach(e => e.classList.remove("active"));

        let activeLink = document.getElementById("users");
        activeLink.classList.add("active");
    </script>
}